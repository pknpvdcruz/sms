'use strict';

/**
 * @file test script for src/LazadaClient
 */
var LazadaClient = require('../LazadaClient');

var _require = require('../LazadaClient/constants'),
    VENTURE = _require.VENTURE;

describe('test LazadaClient.js', function () {
  test("test LazadaClient 'system' namespace action", function () {
    var actions = ['generateAccessToken', 'refreshAccessToken'];
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = actions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var actionName = _step.value;

        expect(LazadaClient.hasOwnProperty(actionName)).toBe(true);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  });
  test("test LazadaClient 'product' namespace action", function () {
    var actions = ['getProducts', 'getCategoryTree', 'getCategoryAttributes', 'getBrands', 'createProduct', 'updateProduct', 'migrateImage', 'setImages', 'updatePriceQuantity', 'removeProduct'];
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = actions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var actionName = _step2.value;

        expect(LazadaClient.hasOwnProperty(actionName)).toBe(true);
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  });
  test("test LazadaClient 'order' namespace action", function () {
    var actions = ['getOrders', 'getOrder', 'getOrderItems', 'getMultipleOrderItems', 'getFailureReasons', 'setStatusToCanceled', 'setStatusToReadyToShip', 'setStatusToPackedByMarketplace', 'setInvoiceNumber', 'getDocument'];
    var _iteratorNormalCompletion3 = true;
    var _didIteratorError3 = false;
    var _iteratorError3 = undefined;

    try {
      for (var _iterator3 = actions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
        var actionName = _step3.value;

        expect(LazadaClient.hasOwnProperty(actionName)).toBe(true);
      }
    } catch (err) {
      _didIteratorError3 = true;
      _iteratorError3 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion3 && _iterator3.return) {
          _iterator3.return();
        }
      } finally {
        if (_didIteratorError3) {
          throw _iteratorError3;
        }
      }
    }
  });
  test("test LazadaClient 'logistics' namespace action", function () {
    var actions = ['getShipmentProviders'];
    var _iteratorNormalCompletion4 = true;
    var _didIteratorError4 = false;
    var _iteratorError4 = undefined;

    try {
      for (var _iterator4 = actions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
        var actionName = _step4.value;

        expect(LazadaClient.hasOwnProperty(actionName)).toBe(true);
      }
    } catch (err) {
      _didIteratorError4 = true;
      _iteratorError4 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion4 && _iterator4.return) {
          _iterator4.return();
        }
      } finally {
        if (_didIteratorError4) {
          throw _iteratorError4;
        }
      }
    }
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fX3Rlc3RzX18vTGF6YWRhQ2xpZW50LnRlc3QuanMiXSwibmFtZXMiOlsiTGF6YWRhQ2xpZW50IiwicmVxdWlyZSIsIlZFTlRVUkUiLCJkZXNjcmliZSIsInRlc3QiLCJhY3Rpb25zIiwiYWN0aW9uTmFtZSIsImV4cGVjdCIsImhhc093blByb3BlcnR5IiwidG9CZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7O0FBR0EsSUFBTUEsZUFBZUMsMEJBQXJCOztlQUNvQkEsb0M7SUFBWkMsTyxZQUFBQSxPOztBQUVSQyxTQUFTLHNCQUFULEVBQWlDLFlBQU07QUFDckNDLE9BQUssNkNBQUwsRUFBb0QsWUFBTTtBQUN4RCxRQUFNQyxVQUFVLENBQUMscUJBQUQsRUFBd0Isb0JBQXhCLENBQWhCO0FBRHdEO0FBQUE7QUFBQTs7QUFBQTtBQUV4RCwyQkFBdUJBLE9BQXZCLDhIQUFnQztBQUFBLFlBQXZCQyxVQUF1Qjs7QUFDOUJDLGVBQU9QLGFBQWFRLGNBQWIsQ0FBNEJGLFVBQTVCLENBQVAsRUFBZ0RHLElBQWhELENBQXFELElBQXJEO0FBQ0Q7QUFKdUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUt6RCxHQUxEO0FBTUFMLE9BQUssOENBQUwsRUFBcUQsWUFBTTtBQUN6RCxRQUFNQyxVQUFVLENBQ2QsYUFEYyxFQUVkLGlCQUZjLEVBR2QsdUJBSGMsRUFJZCxXQUpjLEVBS2QsZUFMYyxFQU1kLGVBTmMsRUFPZCxjQVBjLEVBUWQsV0FSYyxFQVNkLHFCQVRjLEVBVWQsZUFWYyxDQUFoQjtBQUR5RDtBQUFBO0FBQUE7O0FBQUE7QUFhekQsNEJBQXVCQSxPQUF2QixtSUFBZ0M7QUFBQSxZQUF2QkMsVUFBdUI7O0FBQzlCQyxlQUFPUCxhQUFhUSxjQUFiLENBQTRCRixVQUE1QixDQUFQLEVBQWdERyxJQUFoRCxDQUFxRCxJQUFyRDtBQUNEO0FBZndEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFnQjFELEdBaEJEO0FBaUJBTCxPQUFLLDRDQUFMLEVBQW1ELFlBQU07QUFDdkQsUUFBTUMsVUFBVSxDQUNkLFdBRGMsRUFFZCxVQUZjLEVBR2QsZUFIYyxFQUlkLHVCQUpjLEVBS2QsbUJBTGMsRUFNZCxxQkFOYyxFQU9kLHdCQVBjLEVBUWQsZ0NBUmMsRUFTZCxrQkFUYyxFQVVkLGFBVmMsQ0FBaEI7QUFEdUQ7QUFBQTtBQUFBOztBQUFBO0FBYXZELDRCQUF1QkEsT0FBdkIsbUlBQWdDO0FBQUEsWUFBdkJDLFVBQXVCOztBQUM5QkMsZUFBT1AsYUFBYVEsY0FBYixDQUE0QkYsVUFBNUIsQ0FBUCxFQUFnREcsSUFBaEQsQ0FBcUQsSUFBckQ7QUFDRDtBQWZzRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBZ0J4RCxHQWhCRDtBQWlCQUwsT0FBSyxnREFBTCxFQUF1RCxZQUFNO0FBQzNELFFBQU1DLFVBQVUsQ0FBQyxzQkFBRCxDQUFoQjtBQUQyRDtBQUFBO0FBQUE7O0FBQUE7QUFFM0QsNEJBQXVCQSxPQUF2QixtSUFBZ0M7QUFBQSxZQUF2QkMsVUFBdUI7O0FBQzlCQyxlQUFPUCxhQUFhUSxjQUFiLENBQTRCRixVQUE1QixDQUFQLEVBQWdERyxJQUFoRCxDQUFxRCxJQUFyRDtBQUNEO0FBSjBEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFLNUQsR0FMRDtBQU1ELENBL0NEIiwiZmlsZSI6IkxhemFkYUNsaWVudC50ZXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSB0ZXN0IHNjcmlwdCBmb3Igc3JjL0xhemFkYUNsaWVudFxuICovXG5jb25zdCBMYXphZGFDbGllbnQgPSByZXF1aXJlKCdzcmMvTGF6YWRhQ2xpZW50JylcbmNvbnN0IHsgVkVOVFVSRSB9ID0gcmVxdWlyZSgnc3JjL0xhemFkYUNsaWVudC9jb25zdGFudHMnKVxuXG5kZXNjcmliZSgndGVzdCBMYXphZGFDbGllbnQuanMnLCAoKSA9PiB7XG4gIHRlc3QoXCJ0ZXN0IExhemFkYUNsaWVudCAnc3lzdGVtJyBuYW1lc3BhY2UgYWN0aW9uXCIsICgpID0+IHtcbiAgICBjb25zdCBhY3Rpb25zID0gWydnZW5lcmF0ZUFjY2Vzc1Rva2VuJywgJ3JlZnJlc2hBY2Nlc3NUb2tlbiddXG4gICAgZm9yIChsZXQgYWN0aW9uTmFtZSBvZiBhY3Rpb25zKSB7XG4gICAgICBleHBlY3QoTGF6YWRhQ2xpZW50Lmhhc093blByb3BlcnR5KGFjdGlvbk5hbWUpKS50b0JlKHRydWUpXG4gICAgfVxuICB9KVxuICB0ZXN0KFwidGVzdCBMYXphZGFDbGllbnQgJ3Byb2R1Y3QnIG5hbWVzcGFjZSBhY3Rpb25cIiwgKCkgPT4ge1xuICAgIGNvbnN0IGFjdGlvbnMgPSBbXG4gICAgICAnZ2V0UHJvZHVjdHMnLFxuICAgICAgJ2dldENhdGVnb3J5VHJlZScsXG4gICAgICAnZ2V0Q2F0ZWdvcnlBdHRyaWJ1dGVzJyxcbiAgICAgICdnZXRCcmFuZHMnLFxuICAgICAgJ2NyZWF0ZVByb2R1Y3QnLFxuICAgICAgJ3VwZGF0ZVByb2R1Y3QnLFxuICAgICAgJ21pZ3JhdGVJbWFnZScsXG4gICAgICAnc2V0SW1hZ2VzJyxcbiAgICAgICd1cGRhdGVQcmljZVF1YW50aXR5JyxcbiAgICAgICdyZW1vdmVQcm9kdWN0JyxcbiAgICBdXG4gICAgZm9yIChsZXQgYWN0aW9uTmFtZSBvZiBhY3Rpb25zKSB7XG4gICAgICBleHBlY3QoTGF6YWRhQ2xpZW50Lmhhc093blByb3BlcnR5KGFjdGlvbk5hbWUpKS50b0JlKHRydWUpXG4gICAgfVxuICB9KVxuICB0ZXN0KFwidGVzdCBMYXphZGFDbGllbnQgJ29yZGVyJyBuYW1lc3BhY2UgYWN0aW9uXCIsICgpID0+IHtcbiAgICBjb25zdCBhY3Rpb25zID0gW1xuICAgICAgJ2dldE9yZGVycycsXG4gICAgICAnZ2V0T3JkZXInLFxuICAgICAgJ2dldE9yZGVySXRlbXMnLFxuICAgICAgJ2dldE11bHRpcGxlT3JkZXJJdGVtcycsXG4gICAgICAnZ2V0RmFpbHVyZVJlYXNvbnMnLFxuICAgICAgJ3NldFN0YXR1c1RvQ2FuY2VsZWQnLFxuICAgICAgJ3NldFN0YXR1c1RvUmVhZHlUb1NoaXAnLFxuICAgICAgJ3NldFN0YXR1c1RvUGFja2VkQnlNYXJrZXRwbGFjZScsXG4gICAgICAnc2V0SW52b2ljZU51bWJlcicsXG4gICAgICAnZ2V0RG9jdW1lbnQnLFxuICAgIF1cbiAgICBmb3IgKGxldCBhY3Rpb25OYW1lIG9mIGFjdGlvbnMpIHtcbiAgICAgIGV4cGVjdChMYXphZGFDbGllbnQuaGFzT3duUHJvcGVydHkoYWN0aW9uTmFtZSkpLnRvQmUodHJ1ZSlcbiAgICB9XG4gIH0pXG4gIHRlc3QoXCJ0ZXN0IExhemFkYUNsaWVudCAnbG9naXN0aWNzJyBuYW1lc3BhY2UgYWN0aW9uXCIsICgpID0+IHtcbiAgICBjb25zdCBhY3Rpb25zID0gWydnZXRTaGlwbWVudFByb3ZpZGVycyddXG4gICAgZm9yIChsZXQgYWN0aW9uTmFtZSBvZiBhY3Rpb25zKSB7XG4gICAgICBleHBlY3QoTGF6YWRhQ2xpZW50Lmhhc093blByb3BlcnR5KGFjdGlvbk5hbWUpKS50b0JlKHRydWUpXG4gICAgfVxuICB9KVxufSlcbiJdfQ==